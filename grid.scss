

// Basic Responsive Grid

//Small - 4 cols - can change to be as many as necessary
@include respond( S ) {
	.S1, .S2, .S3, .S4{ 					float: left;}
	.S1{	width: percentage( 1/4);	}
	.S2{	width: percentage( 2/4);	}
	.S3{	width: percentage( 3/4);	}
	.S4{	width: percentage( 4/4);	}
}
//Medium - 8 cols
@include respond( M ) {
	.M1, .M2, .M3, .M4, .M5, .M6, .M7, .M8, .M1_3{ float: left;	}
	.M1{	width: percentage( 1/8);	}
	.M2{	width: percentage( 2/8);	}
	.M3{	width: percentage( 3/8);	}
	.M4{	width: percentage( 4/8);	}
	.M5{	width: percentage( 5/8);	}
	.M6{	width: percentage( 6/8);	}
	.M7{	width: percentage( 7/8);	}
	.M8{	width: percentage( 8/8);	}

	//These can be extended as necessary - have left them minimal as they do generate CSS
	.M1_3{	width: percentage( 1/3);	}
}
//Large - 12 cols
@include respond( L ) {
	.L1, .L2, .L3, .L4, .L5, .L6, .L7, .L8, .L9, .L10, .L11, .L12, .L1_3, .L1_5{ float: left;	}
	.L1{	width: percentage( 1/12);	}
	.L2{	width: percentage( 2/12);	}
	.L3{	width: percentage( 3/12);	}
	.L4{	width: percentage( 4/12);	}
	.L5{	width: percentage( 5/12);	}
	.L6{	width: percentage( 6/12);	}
	.L7{	width: percentage( 7/12);	}
	.L8{	width: percentage( 8/12);	}
	.L9{	width: percentage( 9/12);	}
	.L10{	width: percentage( 10/12);	}
	.L11{	width: percentage( 11/12);	}
	.L12{	width: percentage( 12/12);	}

	//These can be extended as necessary - have left them minimal as they do generate CSS
	.L1_3{width: percentage( 1/3);	}
}











//Grid
$gridWidthLarge: 1180px;
$gridWidthMedium: 720px; 
$gridWidthSmall: 320px; 

//Row's span full width of page - inner containers (ctr) jump to the gridWidth specified and stay centered, 
//or can easily be set to 100% width for a particular response. 
.row{
	@include clearfix;

	width: 100%;
	min-width: 320px; 
	position: relative;

	.ctr{
		@include clearfix;

		margin: 0 auto;
		width: $gridWidthLarge;

		.row{
			min-width: inherit;
		}

		@include respond( S ) { 
			width: $gridWidthSmall;
		}

		@include respond( M ) { 
			width: $gridWidthMedium;
		}

		@include respond( L ) { 
			width: $gridWidthLarge;
		}

	}


}
